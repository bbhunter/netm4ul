package {{.adapterName | ToLower }}

import(
	"errors"
	log "github.com/sirupsen/logrus"
	"github.com/netm4ul/netm4ul/core/config"
	"github.com/netm4ul/netm4ul/core/database/models"
)

type {{.adapterName}} struct {
	cfg *config.ConfigToml
}


func InitDatabase(c *config.ConfigToml) *{{.adapterName}} {
	{{.adapterShortName}} := {{.adapterName}}{}
	{{.adapterShortName}}.cfg = c
	return &{{.adapterShortName}}
}

// General purpose functions
func ({{.adapterShortName}} *{{.adapterName}}) Name() string{
	return "{{.adapterName}}"
}

func ({{.adapterShortName}} *{{.adapterName}}) SetupDatabase() error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) DeleteDatabase() error {
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) SetupAuth(username, password, dbname string) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) Connect(*config.ConfigToml) error{
	return errors.New("Not implemented yet")
}

//User
func ({{.adapterShortName}} *{{.adapterName}}) CreateOrUpdateUser(user models.User) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) CreateUser(user models.User) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) UpdateUser(user models.User) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) GetUser(username string) (models.User, error) {
	return models.User{}, errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) GenerateNewToken(user models.User) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) DeleteUser(user models.User) error{
	return errors.New("Not implemented yet")
}

// Project

func ({{.adapterShortName}} *{{.adapterName}}) CreateOrUpdateProject(project models.Project) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) CreateProject(project models.Project) error{
	// Don't forget to add this function on successful database save 
	// events.NewEventProject(project)
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) UpdateProject(project models.Project) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) GetProjects() ([]models.Project, error){
	return []models.Project{}, errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) GetProject(projectName string) (models.Project, error){
	return models.Project{}, errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) DeleteProject(project models.Project) error {
	return errors.New("Not implemented yet")
}

// IP
func ({{.adapterShortName}} *{{.adapterName}}) CreateIP(projectName string, ip models.IP) error{
	// Don't forget to add this function on successful database save 
	// events.NewEventIP(ip)
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) UpdateIP(projectName string, ip models.IP) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) CreateOrUpdateIPs(projectName string, ip []models.IP) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) GetIPs(projectName string) ([]models.IP, error){
	return []models.IP{}, errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) GetIP(projectName string, ip string) (models.IP, error){
	return models.IP{}, errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) DeleteIP(ip models.IP) error {
	return errors.New("Not implemented yet")
}

// Domain
func ({{.adapterShortName}} *{{.adapterName}}) CreateOrUpdateDomain(projectName string, domain models.Domain) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) CreateDomain(projectName string, domain models.Domain) error{
	// Don't forget to add this function on successful database save 
	// events.NewEventDomain(domain)
	return errors.New("Not implemented yet")
}
func ({{.adapterShortName}} *{{.adapterName}}) UpdateDomain(projectName string, domain models.Domain) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) CreateOrUpdateDomains(projectName string, domain []models.Domain) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) GetSubDomains(projectName string) ([]models.Domain, error){
	return []models.Domain{}, errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) GetDomain(projectName string, domain string) (models.Domain, error){
	return models.Domain{}, errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) DeleteDomain(projectName string, domain models.Domain) error {
	return errors.New("Not implemented yet")
}

// Port
func ({{.adapterShortName}} *{{.adapterName}}) CreateOrUpdatePort(projectName string, ip string, port models.Port) error{
	// Don't forget to add this function on successful database save 
	// events.NewEventPort(port)
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) CreatePort(projectName string, ip string, port models.Port) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) UpdatePort(projectName string, ip string, port models.Port) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) CreateOrUpdatePorts(projectName string, ip string, port []models.Port) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) GetPorts(projectName string, ip string) ([]models.Port, error){
	return []models.Port{}, errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) GetPort(projectName string, ip string, port string) (models.Port, error){
	return models.Port{}, errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) DeletePort(projectName string, ip string, port models.Port) error {
	return errors.New("Not implemented yet")
}

// URI (directory and files)
func ({{.adapterShortName}} *{{.adapterName}}) CreateOrUpdateURI(projectName string, ip string, port string, uri models.URI) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) CreateURI(projectName string, ip string, port string, uri models.URI) error{
	// Don't forget to add this function on successful database save 
	// events.NewEventURI(uri)
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) UpdateURI(projectName string, ip string, port string, uri models.URI) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) CreateOrUpdateURIs(projectName string, ip string, port string, uris []models.URI) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) GetURIs(projectName string, ip string, port string) ([]models.URI, error){
	return []models.URI{},errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) GetURI(projectName string, ip string, port string, uri string) (models.URI, error){
	return models.URI{}, errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) DeleteURI(projectName string, ip string, port string, dir models.URI) error {
	return errors.New("Not implemented yet")
}

// Raw data
func ({{.adapterShortName}} *{{.adapterName}}) AppendRawData(projectName string, moduleName string, data interface{}) error{
	return errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) GetRaws(projectName string) (models.Raw, error){
	var raws models.Raw
	return raws, errors.New("Not implemented yet")
}

func ({{.adapterShortName}} *{{.adapterName}}) GetRawModule(projectName string, moduleName string) (map[string]interface{}, error) {
	return nil, errors.New("Not implemented yet")
}